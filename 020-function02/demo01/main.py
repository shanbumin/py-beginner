# 关键字参数



#下面是一个判断传入的三条边长能否构成三角形的函数，在调用函数传入参数时，我们可以指定参数名，也可以不指定参数名，代码如下所示。


def can_form_triangle(a, b, c):
    print(f'a = {a}, b = {b}, c = {c}')
    return a + b > c and b + c > a and a + c > b


# 调用函数传入参数不指定参数名按位置对号入座
print(can_form_triangle(1, 2, 3))



# 调用函数通过“参数名=参数值”的形式按顺序传入参数
print(can_form_triangle(a=1, b=2, c=3))


# 调用函数通过“参数名=参数值”的形式不按顺序传入参数
print(can_form_triangle(c=3, a=1, b=2))


#todo 在没有特殊处理的情况下，函数的参数都是位置参数，也就意味着传入参数的时候对号入座即可
# 当然，也可以通过参数名=参数值的方式传入函数所需的参数，因为指定了参数名，传入参数的顺序可以进行调整，



# 调用函数时，如果希望函数的调用者必须以参数名=参数值的方式传参，可以用命名关键字参数取代位置参数。
# 所谓命名关键字参数，是在函数的参数列表中，写在*之后的参数，代码如下所示。