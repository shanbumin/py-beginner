# 再举一个之前讲过的生成斐波那契数列的例子，
# 因为斐波那契数列前两个数都是1，从第3个数开始，每个数是前两个数相加的和，
# 可以记为f(n) = f(n - 1) + f(n - 2)，很显然这又是一个递归的定义，
# 所以我们可以用下面的递归调用函数来计算第n个斐波那契数。


def fib(n):
    if n in (1,2):
        return 1
    return fib(n-1) + fib(n-2)


# 打印前20个斐波那契数
for i in range(1,21):
    print(fib(i))




#需要提醒大家，上面计算斐波那契数的代码虽然看起来非常简单明了，但执行性能是比较糟糕的，原因大家可以自己思考一下，
#更好的做法还是之前讲过的使用循环递推的方式，代码如下所示。


def fib2(n):
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return a


